group 'eu.omisoft.micro'

version '1.0.0'

apply plugin: 'java'

apply plugin: 'maven-publish'
apply plugin: 'signing'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}





dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.7'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.16'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.7'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.9.Final'
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile 'ch.qos.logback:logback-classic:1.0.13'
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '3.2.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-json', version: '3.2.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: '3.2.2'
    compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: jetty_version
    compile group: 'org.eclipse.jetty', name: 'jetty-jmx', version: jetty_version
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jetty_version
    compile group: 'org.eclipse.jetty.websocket', name: 'javax-websocket-server-impl', version: jetty_version

    compile group: 'org.jboss.resteasy', name: 'resteasy-jaxrs', version: '3.1.1.Final'
    compile 'org.jboss.resteasy:resteasy-servlet-initializer:3.1.1.Final'
    compile group: 'org.jboss.resteasy', name: 'resteasy-guice', version: '3.1.1.Final'
    compile group: 'com.google.inject.extensions', name: 'guice-servlet', version: '4.1.0'
    compile group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '4.1.0'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'
    compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '4.34.2'
    compile group: 'org.hibernate', name: 'hibernate-spatial', version: '5.2.10.Final'
    compile 'org.freemarker:freemarker:2.3.23'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '0.7.8'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.4.1.Final'
    compile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '4.2.0'
    compile 'org.hibernate:hibernate-hikaricp:5.2.11.Final'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.7.8'

}
test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'eu.omisoft.micro'
            artifactId 'server'
            version '1.0.0'

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Microservice Java framework'
            name 'Micro Server framework'
            url 'https://github.com/Omisoft-LLC/micro'
            organization {
                name 'Omisoft LLC'
                url 'https://omisoft.eu '
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/Omisoft-LLC/micro/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/Omisoft-LLC/micro/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/Omisoft-LLC/micro'
                connection 'scm:git:git://github.com/Omisoft-LLC/micro.git'
                developerConnection 'scm:git:ssh://git@github.com:Omisoft-LLC/micro.git'
            }
            developers {
                developer {
                    name 'Deyan Atanasov'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
